{"version":3,"sources":["components/UserDetail/userDetailCard.jsx","components/UserGoal/userGoalCard.jsx","components/AdminSetup/AdminEmail.jsx","components/AdminSetup/adminSetupCard.jsx","components/FormUtility/formValidations.js","components/Onboarding/onboardingCard.jsx","App.js","serviceWorker.js","index.js"],"names":["userDetailCard","handleChange","handleProceed","errors","firstname","lastname","email","submitted","className","style","textAlign","fontSize","Form","Grid","columns","Row","Column","Field","name","value","onChange","type","length","map","err","index","key","Button","fluid","onClick","userGoalCard","handleBack","firstGoal","secondGoal","thirdGoal","Header","as","inline","Input","adminEmail","removeMail","adminSetupCard","handleBackButton","admins","addAdminMail","newAdminMail","handleFinalSubmit","placeholder","icon","circular","Icon","adminMail","AdminEmail","validateEmail","test","Onboarding","resetState","setState","baseState","handleUserDetailsProceedButton","e","preventDefault","state","trim","push","displayUserDetailCard","displayUserGoalCard","displayAdminSetupCard","handleUserGoalsBackButton","handleUserGoalsProceedButton","handleAdminSetupBackButton","handleAdminFinalSubmit","setTimeout","handleAddAdminMail","updatedAmins","handleRemoveAdminMail","filter","target","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d9d9d50d.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, Button, Form } from 'semantic-ui-react'\n\nimport '../commonStyles.scss';\n\nconst userDetailCard = ({handleChange, handleProceed, errors, firstname, lastname, email, submitted}) => (\n\n  <div className='form-body'>\n    { submitted &&  <p style={{textAlign:'center', fontSize:'1.8rem'}}> Submitted! Thanks 🤝</p> }\n    <h1> Hi there. </h1>\n    <Form>\n      <Grid columns='equal'>\n        <Grid.Row>\n          <Grid.Column>\n            <Form.Field>\n              <label>First Name</label>\n              <input name='firstname' value={firstname} onChange={handleChange}/>\n            </Form.Field>\n          </Grid.Column>\n          <Grid.Column>\n            <Form.Field>\n              <label>Last Name</label>\n              <input name='lastname' value={lastname} onChange={handleChange}/>\n            </Form.Field>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column>\n            <Form.Field>\n              <label>Email</label>\n              <input name='email' value={email} onChange={handleChange} type='email'/>\n            </Form.Field>\n          </Grid.Column>\n        </Grid.Row>\n\n        { errors.length> 0 && \n        <Grid.Row>\n          <Grid.Column>\n            {\n              errors.map((err, index) => <p className='errMessage'key={index}> <span> <i className=\"cancel icon\"></i></span>{err} </p>)\n            }\n          </Grid.Column>\n        </Grid.Row>\n        }\n\n\n        <Grid.Row className='buttons-row'>\n          <Grid.Column>\n              <Button fluid className=\"btn purple-btn\" onClick={handleProceed} > Proceed</Button>\n          </Grid.Column>\n        </Grid.Row>\n\n      </Grid>\n    </Form>\n  </div>\n\n\n\n);\n\nexport default userDetailCard;","import React from 'react';\nimport { Grid, Input, Header, Button, Form } from 'semantic-ui-react'\n\nimport '../commonStyles.scss';\nimport './userGoalCard.scss'\n\nconst userGoalCard = ({firstname, handleChange, handleBack, handleProceed, errors, firstGoal, secondGoal, thirdGoal}) => (\n\n  <div className='form-body'>\n    <h1> Hi {firstname} </h1>\n    <Header as='h3'>What are your main goals with Slayte</Header>\n    <Form>\n      <Grid columns='equal'>\n\n        <Grid.Row>\n          <Grid.Column>\n            <Form.Field inline>\n              <label>1.</label>\n              <Input className='goal-input' name='firstGoal' value={firstGoal}onChange={handleChange} />\n            </Form.Field>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column className='goal-input-row'>\n            <Form.Field inline>\n              <label>2.</label>\n              <Input className='goal-input' name='secondGoal' value={secondGoal} onChange={handleChange}/>\n            </Form.Field>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column>\n            <Form.Field inline>\n              <label>3.</label>\n              <Input className='goal-input' name='thirdGoal' value={thirdGoal} onChange={handleChange}/>\n            </Form.Field>\n          </Grid.Column>\n        </Grid.Row>\n\n        { errors.length> 0 && \n        <Grid.Row>\n          <Grid.Column>\n            {\n              errors.map((err, index) => <p className='errMessage'key={index}> <span> <i className=\"cancel icon\"></i></span>{err} </p>)\n            }\n          </Grid.Column>\n        </Grid.Row>\n        }\n\n\n\n        <Grid.Row className='buttons-row'>\n          <Grid.Column style={{textAlign: 'center'}}>\n            <Button className='btn purple-btn' onClick={handleBack}> back </Button>\n            <Button className='btn purple-btn' onClick={handleProceed}>proceed</Button>\n          </Grid.Column>\n        </Grid.Row>\n\n      </Grid>\n    </Form>\n  </div>\n\n\n\n);\n\nexport default userGoalCard;","import React from 'react';\n\nimport './adminEmail.scss';\n\nconst adminEmail = ({email, removeMail}) => (\n<span className='admin-email'> {email} <i className=\" delete-email remove circle icon\" onClick={()=> (removeMail(email))}></i> </span>\n);\n\nexport default adminEmail;","import React from 'react';\nimport { Grid, Icon, Button, Form } from 'semantic-ui-react'\n\nimport '../commonStyles.scss';\nimport './adminSetupCard.scss'\n\nimport AdminEmail from './AdminEmail';\n\nconst adminSetupCard = ({ errors, handleChange, handleBackButton, admins, removeMail, addAdminMail, newAdminMail, handleFinalSubmit }) => (\n\n  <div className='form-body'>\n    <h1> Way to go ! </h1>\n    <h3 className='sub-heading' >Let us know who should be admins in this setup, then you are on your way</h3>\n    <Form>\n      <Grid columns='equal'>\n\n        <Grid.Row>\n          <Grid.Column>\n            <Form.Field>\n              <input placeholder='Type email' name='newAdminMail' value={newAdminMail} onChange={handleChange} />\n            </Form.Field>\n          </Grid.Column>\n        </Grid.Row>\n\n         \n        <Grid.Row>\n          <Grid.Column>\n            <div className='centered-content'>\n              <Button icon circular className='addButton'>\n                <Icon name='add' onClick={() => addAdminMail(newAdminMail)} />\n              </Button>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n        \n\n        {admins.length > 0 &&\n          <Grid.Row>\n            <Grid.Column>\n              {\n                admins.map((adminMail, index) => <AdminEmail key={index} email={adminMail} removeMail={removeMail} />)\n              }\n            </Grid.Column>\n          </Grid.Row>\n        }\n\n        {errors.length > 0 &&\n          <Grid.Row>\n            <Grid.Column>\n              {\n                errors.map((err, index) => <p className='errMessage' key={index}> <span> <i className=\"cancel icon\"></i></span>{err} </p>)\n              }\n            </Grid.Column>\n          </Grid.Row>\n        }\n\n        <Grid.Row className='buttons-row'>\n          <Grid.Column>\n            <div className='centered-content'>\n              <Button className='btn purple-btn' onClick={handleBackButton}> back </Button>\n              <Button className='btn green-btn' onClick={handleFinalSubmit}>finish</Button>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n\n      </Grid>\n    </Form>\n  </div>\n\n\n\n);\n\nexport default adminSetupCard;","export let  validateEmail =(email) => {\n  let regExpression = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return regExpression.test(email);\n};\n\n","import React, { Component } from 'react';\n\nimport UserDetailCard from '../UserDetail/userDetailCard';\nimport UserGoalCard from '../UserGoal/userGoalCard';\nimport AdminSetupCard from '../AdminSetup/adminSetupCard';\n\nimport { validateEmail } from '../FormUtility/formValidations';\n\n\nclass Onboarding extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      firstGoal: '',\n      secondGoal: '',\n      thirdGoal: '',\n      adminEmail: '',\n      displayUserDetailCard: true,\n      displayUserGoalCard: false,\n      displayAdminSetupCard: false,\n      errors: [],\n      admins: [],\n      newAdminMail: '',\n      submitted: false\n    }\n    this.baseState = this.state \n  }\n\n  // reset state\n  resetState = () => {\n    this.setState(this.baseState);\n  }\n\n\n  //handle Button clicks\n  handleUserDetailsProceedButton = (e) => {\n    e.preventDefault();\n    let { firstname, lastname, email } = this.state;\n    let errors = [];\n    if (firstname.trim().length < 2) errors.push('Please enter firstname');\n    if (lastname.trim().length < 2) errors.push('Please enter lastname');\n    if (!validateEmail(email)) errors.push('enter a valid email');\n    if (errors.length > 0) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: [],\n        displayUserDetailCard: false,\n        displayUserGoalCard: true,\n        displayAdminSetupCard: false,\n      });\n    }\n  }\n\n  handleUserGoalsBackButton = (e) => {\n    e.preventDefault();\n      this.setState({\n        errors: [],\n        displayUserDetailCard: true,\n        displayUserGoalCard: false,\n        displayAdminSetupCard: false,\n      });\n  }\n\n  handleUserGoalsProceedButton = (e) => {\n    e.preventDefault();\n    let { firstGoal, secondGoal, thirdGoal } = this.state;\n    if (firstGoal.trim().length < 2 && secondGoal.trim().length < 2 && thirdGoal.trim().length < 2) {\n      this.setState({ errors: ['Please add at least one goal'] });\n    } else {\n      this.setState({\n        errors: [],\n        displayUserDetailCard: false,\n        displayUserGoalCard: false,\n        displayAdminSetupCard: true,\n      });\n    }\n  }\n\n  handleAdminSetupBackButton = (e) => {\n    e.preventDefault();\n      this.setState({\n        errors: [],\n        displayUserDetailCard: false,\n        displayUserGoalCard: true,\n        displayAdminSetupCard: false,\n      });\n  }\n\n  handleAdminFinalSubmit = (e) => {\n    e.preventDefault(e)\n    if (this.state.admins.length < 1) {\n      this.setState({ errors: ['Add at least one admin email']});\n    } else {\n      this.resetState();\n      this.setState({ submitted: true});\n      setTimeout(()=> {\n        this.setState({ submitted: false })\n      }, 4000);\n    }\n  }\n\n  handleAdminSetupBackButton = (e) => {\n    e.preventDefault();\n      this.setState({\n        errors: [],\n        displayUserDetailCard: false,\n        displayUserGoalCard: true,\n        displayAdminSetupCard: false,\n      });\n  }\n\n  handleAddAdminMail = (email) => {\n    if (!validateEmail(email)) {\n      this.setState({ errors: ['please enter a valid email']});\n    } else {\n      let { admins } = this.state;\n      let updatedAmins = [...admins, email]\n      this.setState({ admins: updatedAmins, errors:[], newAdminMail: '' });\n    }\n  }\n\n  handleRemoveAdminMail = (email) => {\n    let { admins } = this.state;\n    let updatedAmins = admins.filter((adminEmail)=> adminEmail !== email);\n    this.setState({ admins: updatedAmins});\n  }\n\n\n  // Handle user inputs\n  handleChange = (e) => {\n    let { name, value } = e.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n\n\n  render() {\n    let { displayUserGoalCard, displayUserDetailCard,displayAdminSetupCard, firstname, lastname, email, errors, firstGoal, secondGoal, thirdGoal, admins, newAdminMail, submitted } = this.state;\n\n    return (\n      <div>\n        {\n          displayUserDetailCard &&\n          <UserDetailCard\n            firstname={firstname}\n            lastname={lastname}\n            email={email}\n            handleProceed={this.handleUserDetailsProceedButton}\n            handleChange={this.handleChange}\n            errors={errors} \n            submitted={submitted}/>\n        }\n        {\n          displayUserGoalCard &&\n          <UserGoalCard\n            firstname={firstname}\n            firstGoal={firstGoal}\n            secondGoal={secondGoal}\n            thirdGoal={thirdGoal}\n            handleBack={this.handleUserGoalsBackButton}\n            handleProceed={this.handleUserGoalsProceedButton}\n            handleChange={this.handleChange}\n            errors={errors} />\n        }\n        {\n         displayAdminSetupCard &&\n          <AdminSetupCard\n            handleBackButton={this.handleAdminSetupBackButton}\n            handleFinalSubmit={this.handleAdminFinalSubmit}\n            handleChange={this.handleChange}\n            removeMail={this.handleRemoveAdminMail}\n            addAdminMail={this.handleAddAdminMail}\n            newAdminMail={newAdminMail}\n            admins={admins}\n            errors={errors} />\n        }\n      </div>\n    )\n  }\n}\n\n\nexport default Onboarding;","import React from 'react';\n\n\nimport Onboarding from './components/Onboarding/onboardingCard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Onboarding/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}